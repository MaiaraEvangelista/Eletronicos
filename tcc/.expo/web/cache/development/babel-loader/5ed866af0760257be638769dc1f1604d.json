{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigio\\\\Desktop\\\\Eletronicos\\\\React_Native\\\\tcc\\\\src\\\\pages\\\\cadastro_user\\\\cadastroUser.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Style } from \"react-native-web/dist/index\";\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\nimport { max } from \"react-native-reanimated\";\n\nvar cadastroUser = function (_Component) {\n  _inherits(cadastroUser, _Component);\n\n  var _super = _createSuper(cadastroUser);\n\n  function cadastroUser(props) {\n    var _this;\n\n    _classCallCheck(this, cadastroUser);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(cadastroUser, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.triangleCorner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }), React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.ctnCad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.h1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }, \"Cadastro\"), React.createElement(View, {\n        style: styles.NomeCtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputNome,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.InfsInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.Infs,\n        placeholder: \"Email\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      }), React.createElement(TextInput, {\n        style: styles.Infs,\n        placeholder: \"Senha\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"visible-password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return cadastroUser;\n}(Component);\n\nexport { cadastroUser as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  triangleCorner: {\n    width: 0,\n    height: 0,\n    backgroundColor: \"transparent\",\n    borderStyle: \"solid\",\n    borderRightWidth: 300,\n    borderTopWidth: 300,\n    borderRightColor: \"transparent\",\n    borderTopColor: \"#008763\"\n  },\n  scrollView: {\n    backgroundColor: 'pink',\n    marginHorizontal: 30\n  },\n  ctnCad: {\n    height: max,\n    width: max,\n    backgroundColor: 'green',\n    textAlign: 'center'\n  },\n  h1: {\n    fontSize: 30,\n    fontFamily: 'Arial'\n  },\n  NomeCtn: {\n    height: max,\n    width: max,\n    backgroundColor: 'blue'\n  },\n  inputNome: {\n    height: 50,\n    width: max,\n    backgroundColor: 'white',\n    marginTop: 40,\n    paddingLeft: 10,\n    color: 'black',\n    fontSize: 20,\n    fontFamily: 'Arial',\n    borderColor: '#008763',\n    borderWidth: 3,\n    borderRadius: 7\n  },\n  InfsInput: {\n    height: max,\n    width: max,\n    justifyContent: 'space-around'\n  },\n  Infs: {\n    height: 50,\n    width: 200\n  }\n});","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/Eletronicos/React_Native/tcc/src/pages/cadastro_user/cadastroUser.js"],"names":["React","Component","Style","ScrollView","TextInput","max","cadastroUser","props","state","styles","container","triangleCorner","scrollView","ctnCad","h1","NomeCtn","inputNome","InfsInput","Infs","StyleSheet","create","flex","width","height","backgroundColor","borderStyle","borderRightWidth","borderTopWidth","borderRightColor","borderTopColor","marginHorizontal","textAlign","fontSize","fontFamily","marginTop","paddingLeft","color","borderColor","borderWidth","borderRadius","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, Style } from \"react-native\";\r\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\r\nimport { max } from \"react-native-reanimated\";\r\n\r\nexport default class cadastroUser extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state =\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <View style={styles.container}>\r\n                <View style={styles.triangleCorner}/>\r\n\r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.ctnCad}>\r\n                        <Text style={styles.h1}>Cadastro</Text>\r\n\r\n                        <View style={styles.NomeCtn}>\r\n                            <TextInput\r\n                             style={styles.inputNome}\r\n                             placeholder=\"Nome completo\"\r\n                             placeholderTextColor=\"black\"\r\n                             />\r\n                        </View>\r\n\r\n                        <View style={styles.InfsInput}>\r\n                            <TextInput\r\n                             style={styles.Infs}\r\n                             placeholder=\"Email\"\r\n                             placeholderTextColor=\"black\"\r\n                             />\r\n\r\n                            <TextInput\r\n                             style={styles.Infs}\r\n                             placeholder=\"Senha\"\r\n                             placeholderTextColor=\"black\"\r\n                             keyboardType=\"visible-password\"\r\n                             secureTextEntry={true}\r\n                             />\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n  },\r\n\r\n  triangleCorner: {\r\n    width: 0,\r\n    height: 0,\r\n    backgroundColor: \"transparent\",\r\n    borderStyle: \"solid\",\r\n    borderRightWidth: 300,\r\n    borderTopWidth: 300,\r\n    borderRightColor: \"transparent\",\r\n    borderTopColor: \"#008763\",\r\n  },\r\n\r\n  scrollView: {\r\n    backgroundColor: 'pink',\r\n    marginHorizontal: 30,\r\n  },\r\n\r\n  ctnCad: {\r\n    height: max,\r\n    width: max,\r\n    backgroundColor: 'green',\r\n    textAlign: 'center'\r\n  },\r\n\r\n  h1: {\r\n      fontSize: 30,\r\n      fontFamily: 'Arial'\r\n  },\r\n\r\n  NomeCtn: {\r\n    height: max,\r\n    width: max,\r\n    backgroundColor: 'blue',\r\n  },\r\n\r\n  inputNome: {\r\n    height: 50,\r\n    width: max,\r\n    backgroundColor: 'white',\r\n\r\n    marginTop: 40,\r\n    paddingLeft: 10,\r\n    color: 'black',\r\n    fontSize: 20,\r\n    fontFamily: 'Arial',\r\n\r\n    borderColor: '#008763',\r\n    borderWidth: 3,\r\n    borderRadius: 7,\r\n  },\r\n\r\n  InfsInput: {\r\n    height: max,\r\n    width: max,\r\n    justifyContent: 'space-around'\r\n  },\r\n  \r\n  Infs: {\r\n    height: 50,\r\n    width: 200,\r\n  },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}