{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { runOnUI } from \"../core\";\nimport { withStyleAnimation } from \"../animation/styleAnimation\";\nrunOnUI(function () {\n  'worklet';\n\n  var configs = {};\n  var enteringAnimationForTag = {};\n  global.LayoutAnimationRepository = {\n    configs: configs,\n    registerConfig: function registerConfig(tag, config) {\n      configs[tag] = config;\n      enteringAnimationForTag[tag] = null;\n    },\n    removeConfig: function removeConfig(tag) {\n      delete configs[tag];\n      delete enteringAnimationForTag[tag];\n    },\n    startAnimationForTag: function startAnimationForTag(tag, type, yogaValues) {\n      if (configs[tag] == null) {\n        return;\n      }\n\n      var style = configs[tag][type](yogaValues);\n      var currentAnimation = style.animations;\n\n      if (type === 'entering') {\n        enteringAnimationForTag[tag] = style;\n      } else if (type === 'layout' && enteringAnimationForTag[tag] !== null) {\n        var entryAniamtion = enteringAnimationForTag[tag].animations;\n        var layoutAnimation = style.animations;\n        currentAnimation = {};\n\n        for (var key in entryAniamtion) {\n          currentAnimation[key] = entryAniamtion[key];\n        }\n\n        for (var _key in layoutAnimation) {\n          currentAnimation[_key] = layoutAnimation[_key];\n        }\n\n        enteringAnimationForTag[tag] = null;\n      }\n\n      var sv = configs[tag].sv;\n\n      _stopObservingProgress(tag, false);\n\n      _startObservingProgress(tag, sv);\n\n      sv._value = _extends({}, sv._value, style.initialValues);\n\n      _stopObservingProgress(tag, false);\n\n      var animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = function (finished) {\n        if (finished) {\n          _stopObservingProgress(tag, finished);\n        }\n\n        style.callback && style.callback(finished);\n\n        if (type === 'entering') {\n          enteringAnimationForTag[tag] = null;\n        }\n      };\n\n      configs[tag].sv.value = animation;\n\n      _startObservingProgress(tag, sv);\n    }\n  };\n})();","map":{"version":3,"sources":["C:/Users/52672266883/Desktop/PROJETO AQ/Eletronicos/tcc/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/LayoutAnimationRepository.js"],"names":["runOnUI","withStyleAnimation","configs","enteringAnimationForTag","global","LayoutAnimationRepository","registerConfig","tag","config","removeConfig","startAnimationForTag","type","yogaValues","style","currentAnimation","animations","entryAniamtion","layoutAnimation","key","sv","_stopObservingProgress","_startObservingProgress","_value","initialValues","animation","callback","finished","value"],"mappings":"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","sourcesContent":["/* global _stopObservingProgress, _startObservingProgress */\r\nimport { runOnUI } from '../core';\r\nimport { withStyleAnimation } from '../animation/styleAnimation';\r\nrunOnUI(() => {\r\n    'worklet';\r\n    const configs = {};\r\n    const enteringAnimationForTag = {};\r\n    global.LayoutAnimationRepository = {\r\n        configs,\r\n        registerConfig(tag, config) {\r\n            configs[tag] = config;\r\n            enteringAnimationForTag[tag] = null;\r\n        },\r\n        removeConfig(tag) {\r\n            delete configs[tag];\r\n            delete enteringAnimationForTag[tag];\r\n        },\r\n        startAnimationForTag(tag, type, yogaValues) {\r\n            if (configs[tag] == null) {\r\n                return; // :(\r\n            }\r\n            const style = configs[tag][type](yogaValues);\r\n            let currentAnimation = style.animations;\r\n            if (type === 'entering') {\r\n                enteringAnimationForTag[tag] = style;\r\n            }\r\n            else if (type === 'layout' && enteringAnimationForTag[tag] !== null) {\r\n                const entryAniamtion = enteringAnimationForTag[tag].animations;\r\n                const layoutAnimation = style.animations;\r\n                currentAnimation = {};\r\n                for (const key in entryAniamtion) {\r\n                    currentAnimation[key] = entryAniamtion[key];\r\n                }\r\n                for (const key in layoutAnimation) {\r\n                    currentAnimation[key] = layoutAnimation[key];\r\n                }\r\n                enteringAnimationForTag[tag] = null;\r\n            }\r\n            const sv = configs[tag].sv;\r\n            _stopObservingProgress(tag, false);\r\n            _startObservingProgress(tag, sv);\r\n            sv._value = Object.assign({}, sv._value, style.initialValues);\r\n            _stopObservingProgress(tag, false);\r\n            const animation = withStyleAnimation(currentAnimation);\r\n            animation.callback = (finished) => {\r\n                if (finished) {\r\n                    _stopObservingProgress(tag, finished);\r\n                }\r\n                style.callback && style.callback(finished);\r\n                if (type === 'entering') {\r\n                    enteringAnimationForTag[tag] = null;\r\n                }\r\n            };\r\n            configs[tag].sv.value = animation;\r\n            _startObservingProgress(tag, sv);\r\n        },\r\n    };\r\n})();\r\n"]},"metadata":{},"sourceType":"module"}