{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigio\\\\Desktop\\\\Eletronicos\\\\tcc\\\\src\\\\pages\\\\cadastro_user\\\\cadastroUser.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Style } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport { max } from \"react-native-reanimated\";\n\nvar cadastroUser = function (_Component) {\n  _inherits(cadastroUser, _Component);\n\n  var _super = _createSuper(cadastroUser);\n\n  function cadastroUser(props) {\n    var _this;\n\n    _classCallCheck(this, cadastroUser);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      celular: '',\n      CEP: ''\n    };\n    return _this;\n  }\n\n  _createClass(cadastroUser, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.triangleCorner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.ctnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.h1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.h1Style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }\n      }, \"Cadastro\")), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }), React.createElement(TextInput, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.btnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return cadastroUser;\n}(Component);\n\nexport { cadastroUser as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  triangleCorner: {\n    width: 0,\n    height: 0,\n    backgroundColor: \"transparent\",\n    borderStyle: \"solid\",\n    borderRightWidth: 300,\n    borderTopWidth: 300,\n    borderRightColor: \"transparent\",\n    borderTopColor: \"#008763\"\n  },\n  ctnInput: {\n    flex: 1,\n    backgroundColor: 'blue',\n    justifyContent: 'space-between',\n    position: 'relative',\n    bottom: 30\n  },\n  h1: {\n    flex: 0.1,\n    backgroundColor: 'green',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  h1Style: {\n    fontSize: 25,\n    fontFamily: 'Arial',\n    fontWeight: 'bold'\n  },\n  inputStyle: {\n    flex: 0.12,\n    backgroundColor: 'yellow',\n    flexDirection: 'row'\n  },\n  btnInput: {\n    flex: 0.1,\n    backgroundColor: 'orange'\n  }\n});","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/Eletronicos/tcc/src/pages/cadastro_user/cadastroUser.js"],"names":["React","Component","Style","ScrollView","TextInput","TextInputMask","max","cadastroUser","props","state","celular","CEP","styles","container","triangleCorner","ctnInput","h1","h1Style","inputStyle","btnInput","StyleSheet","create","flex","width","height","backgroundColor","borderStyle","borderRightWidth","borderTopWidth","borderRightColor","borderTopColor","justifyContent","position","bottom","alignItems","fontSize","fontFamily","fontWeight","flexDirection"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;SACiCC,K;;AACjC,SAASC,UAAT,EAAqBC,SAArB,QAAsC,8BAAtC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,GAAT,QAAoB,yBAApB;;IAEqBC,Y;;;;;AACjB,wBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,8BAAMA,KAAN;AACA,UAAKC,KAAL,GACA;AACIC,MAAAA,OAAO,EAAE,EADb;AAEIC,MAAAA,GAAG,EAAE;AAFT,KADA;AAFJ;AAOC;;;;WAED,kBACA;AACI,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAIA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CALJ,EAeI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAmBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,EAuBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBJ,EA2BI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BJ,EA+BI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BJ,CAJA,CADJ;AA2CH;;;;EAxDqClB,S;;SAArBM,Y;AA2DrB,IAAMK,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACXS,IAAAA,IAAI,EAAE;AADK,GADkB;AAK/BR,EAAAA,cAAc,EAAE;AACdS,IAAAA,KAAK,EAAE,CADO;AAEdC,IAAAA,MAAM,EAAE,CAFM;AAGdC,IAAAA,eAAe,EAAE,aAHH;AAIdC,IAAAA,WAAW,EAAE,OAJC;AAKdC,IAAAA,gBAAgB,EAAE,GALJ;AAMdC,IAAAA,cAAc,EAAE,GANF;AAOdC,IAAAA,gBAAgB,EAAE,aAPJ;AAQdC,IAAAA,cAAc,EAAE;AARF,GALe;AAgB/Bf,EAAAA,QAAQ,EAAG;AACTO,IAAAA,IAAI,EAAE,CADG;AAETG,IAAAA,eAAe,EAAE,MAFR;AAITM,IAAAA,cAAc,EAAE,eAJP;AAMTC,IAAAA,QAAQ,EAAE,UAND;AAOTC,IAAAA,MAAM,EAAE;AAPC,GAhBoB;AA0B/BjB,EAAAA,EAAE,EAAE;AACFM,IAAAA,IAAI,EAAE,GADJ;AAEFG,IAAAA,eAAe,EAAE,OAFf;AAIFM,IAAAA,cAAc,EAAE,QAJd;AAKFG,IAAAA,UAAU,EAAE;AALV,GA1B2B;AAkC/BjB,EAAAA,OAAO,EAAE;AACPkB,IAAAA,QAAQ,EAAG,EADJ;AAEPC,IAAAA,UAAU,EAAG,OAFN;AAGPC,IAAAA,UAAU,EAAE;AAHL,GAlCsB;AAwC/BnB,EAAAA,UAAU,EAAE;AACVI,IAAAA,IAAI,EAAE,IADI;AAEVG,IAAAA,eAAe,EAAE,QAFP;AAIVa,IAAAA,aAAa,EAAE;AAJL,GAxCmB;AA+C/BnB,EAAAA,QAAQ,EAAE;AACRG,IAAAA,IAAI,EAAE,GADE;AAERG,IAAAA,eAAe,EAAE;AAFT;AA/CqB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, Style, TouchableOpacity } from \"react-native\";\r\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\r\nimport { TextInputMask } from 'react-native-masked-text'\r\nimport { max } from \"react-native-reanimated\";\r\n\r\nexport default class cadastroUser extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            celular: '',\r\n            CEP: '',\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <View style={styles.container}>\r\n\r\n                <View style={styles.triangleCorner}/>\r\n\r\n            <View style={styles.ctnInput}>\r\n                <View style={styles.h1}>\r\n                  <Text style={styles.h1Style}>Cadastro</Text>\r\n                </View>\r\n\r\n                <View style={styles.inputStyle}>\r\n                  <TextInput \r\n                    \r\n                  />\r\n\r\n                  <TextInput \r\n                    \r\n                  />\r\n                </View>\r\n\r\n                <View style={styles.inputStyle}>\r\n\r\n                </View>\r\n\r\n                <View style={styles.inputStyle}>\r\n\r\n                </View>\r\n\r\n                <View style={styles.inputStyle}>\r\n\r\n                </View>\r\n\r\n                <View style={styles.inputStyle}>\r\n\r\n                </View>\r\n\r\n                <View style={styles.btnInput}>\r\n\r\n                </View>\r\n            </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n  },\r\n\r\n  triangleCorner: {\r\n    width: 0,\r\n    height: 0,\r\n    backgroundColor: \"transparent\",\r\n    borderStyle: \"solid\",\r\n    borderRightWidth: 300,\r\n    borderTopWidth: 300,\r\n    borderRightColor: \"transparent\",\r\n    borderTopColor: \"#008763\",\r\n  },\r\n\r\n  ctnInput : {\r\n    flex: 1,\r\n    backgroundColor: 'blue',\r\n\r\n    justifyContent: 'space-between',\r\n\r\n    position: 'relative',\r\n    bottom: 30,\r\n  },\r\n\r\n  h1: {\r\n    flex: 0.1,\r\n    backgroundColor: 'green',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  h1Style: {\r\n    fontSize : 25,\r\n    fontFamily : 'Arial',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  inputStyle: {\r\n    flex: 0.12,\r\n    backgroundColor: 'yellow',\r\n\r\n    flexDirection: 'row',\r\n  },\r\n\r\n  btnInput: {\r\n    flex: 0.1,\r\n    backgroundColor: 'orange',\r\n  },\r\n  \r\n})"]},"metadata":{},"sourceType":"module"}