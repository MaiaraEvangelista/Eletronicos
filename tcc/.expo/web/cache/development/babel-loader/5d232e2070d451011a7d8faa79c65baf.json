{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigio\\\\Desktop\\\\Nova pasta\\\\Eletronicos\\\\tcc\\\\src\\\\pages\\\\lista_lojas\\\\lista.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInputMask } from 'react-native-masked-text';\n\nvar Lista = function (_Component) {\n  _inherits(Lista, _Component);\n\n  var _super = _createSuper(Lista);\n\n  function Lista(props) {\n    var _this;\n\n    _classCallCheck(this, Lista);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      lista: []\n    };\n    return _this;\n  }\n\n  _createClass(Lista, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 10\n        }\n      });\n    }\n  }]);\n\n  return Lista;\n}(Component);\n\nexport { Lista as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  listaCtn: {\n    width: '85%',\n    height: '20%',\n    backgroundColor: 'green',\n    borderRadius: 10,\n    flexDirection: 'row'\n  },\n  ImgCtn: {\n    width: '40%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  Img: {\n    width: '90%',\n    height: '80%',\n    backgroundColor: 'gray'\n  },\n  lista: {\n    width: '50%',\n    height: '100%',\n    backgroundColor: 'red',\n    justifyContent: 'flex-end'\n  },\n  arrow: {\n    width: '10%',\n    height: '100%',\n    backgroundColor: 'orange',\n    justifyContent: 'flex-end'\n  },\n  h1Lista: {\n    width: '100%',\n    height: '25%',\n    backgroundColor: 'blue'\n  },\n  h1: {\n    color: 'white',\n    textTransform: 'uppercase',\n    fontWeight: 'bold'\n  },\n  infsLista: {\n    height: '75%',\n    width: '100%',\n    backgroundColor: 'purple',\n    justifyContent: 'space-around'\n  },\n  ArrowDown: {\n    height: '100%',\n    width: '100%'\n  },\n  touchArrow: {\n    height: '30%',\n    width: '100%',\n    justifyContent: 'flex-end'\n  },\n  txtLista: {\n    fontFamily: 'Arial',\n    fontSize: '100%',\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/Nova pasta/Eletronicos/tcc/src/pages/lista_lojas/lista.js"],"names":["React","Component","TextInputMask","Lista","props","state","lista","styles","container","StyleSheet","create","flex","flexDirection","alignItems","listaCtn","width","height","backgroundColor","borderRadius","ImgCtn","justifyContent","Img","arrow","h1Lista","h1","color","textTransform","fontWeight","infsLista","ArrowDown","touchArrow","txtLista","fontFamily","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAG;AADD,KAAX;AAFJ;AAKC;;;;WAED,kBACA;AACI,aACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAOH;;;;EAlB8BP,S;;SAAdE,K;AAqBrB,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAE7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,QAFR;AAGPC,IAAAA,UAAU,EAAE;AAHL,GAFkB;AAQ7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,MAAM,EAAE,KAFF;AAGNC,IAAAA,eAAe,EAAE,OAHX;AAKNC,IAAAA,YAAY,EAAE,EALR;AAONN,IAAAA,aAAa,EAAE;AAPT,GARmB;AAkB7BO,EAAAA,MAAM,EAAE;AACJJ,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAKJI,IAAAA,cAAc,EAAE,QALZ;AAMJP,IAAAA,UAAU,EAAE;AANR,GAlBqB;AA2B7BQ,EAAAA,GAAG,EAAE;AACDN,IAAAA,KAAK,EAAE,KADN;AAEDC,IAAAA,MAAM,EAAE,KAFP;AAGDC,IAAAA,eAAe,EAAE;AAHhB,GA3BwB;AAiC7BX,EAAAA,KAAK,EAAE;AACHS,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,MAAM,EAAE,MAFL;AAGHC,IAAAA,eAAe,EAAE,KAHd;AAKHG,IAAAA,cAAc,EAAE;AALb,GAjCsB;AAyC7BE,EAAAA,KAAK,EAAE;AACHP,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,MAAM,EAAE,MAFL;AAGHC,IAAAA,eAAe,EAAE,QAHd;AAKHG,IAAAA,cAAc,EAAE;AALb,GAzCsB;AAiD7BG,EAAAA,OAAO,EAAE;AACLR,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,eAAe,EAAE;AAHZ,GAjDoB;AAuD7BO,EAAAA,EAAE,EAAE;AACAC,IAAAA,KAAK,EAAE,OADP;AAEAC,IAAAA,aAAa,EAAE,WAFf;AAGAC,IAAAA,UAAU,EAAE;AAHZ,GAvDyB;AA6D7BC,EAAAA,SAAS,EAAE;AACPZ,IAAAA,MAAM,EAAE,KADD;AAEPD,IAAAA,KAAK,EAAE,MAFA;AAGPE,IAAAA,eAAe,EAAE,QAHV;AAKPG,IAAAA,cAAc,EAAE;AALT,GA7DkB;AAqE7BS,EAAAA,SAAS,EAAE;AACPb,IAAAA,MAAM,EAAE,MADD;AAEPD,IAAAA,KAAK,EAAE;AAFA,GArEkB;AA0E7Be,EAAAA,UAAU,EAAE;AACRd,IAAAA,MAAM,EAAE,KADA;AAERD,IAAAA,KAAK,EAAE,MAFC;AAIRK,IAAAA,cAAc,EAAE;AAJR,GA1EiB;AAiF7BW,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,OADN;AAENC,IAAAA,QAAQ,EAAE,MAFJ;AAGNR,IAAAA,KAAK,EAAE;AAHD;AAjFmB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport { TextInputMask } from 'react-native-masked-text'\r\n\r\nexport default class Lista extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            lista : [],\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n         <View style={styles.container}>\r\n\r\n             \r\n\r\n         </View>   \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    listaCtn: {\r\n        width: '85%',\r\n        height: '20%',\r\n        backgroundColor: 'green',\r\n\r\n        borderRadius: 10,\r\n\r\n        flexDirection: 'row',\r\n    },\r\n\r\n    ImgCtn: {\r\n        width: '40%',\r\n        height: '100%',\r\n        // backgroundColor: 'gray',\r\n\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    \r\n    Img: {\r\n        width: '90%',\r\n        height: '80%',\r\n        backgroundColor: 'gray',\r\n    },\r\n\r\n    lista: {\r\n        width: '50%',\r\n        height: '100%',\r\n        backgroundColor: 'red',\r\n\r\n        justifyContent: 'flex-end'\r\n    },\r\n\r\n    arrow: {\r\n        width: '10%',\r\n        height: '100%',\r\n        backgroundColor: 'orange',\r\n\r\n        justifyContent: 'flex-end'\r\n    },\r\n\r\n    h1Lista: {\r\n        width: '100%',\r\n        height: '25%',\r\n        backgroundColor: 'blue'\r\n    },\r\n\r\n    h1: {\r\n        color: 'white',\r\n        textTransform: 'uppercase',\r\n        fontWeight: 'bold',\r\n    },\r\n\r\n    infsLista: {\r\n        height: '75%',\r\n        width: '100%',\r\n        backgroundColor: 'purple',\r\n\r\n        justifyContent: 'space-around',\r\n    },\r\n\r\n    ArrowDown: {\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n\r\n    touchArrow: {\r\n        height: '30%',\r\n        width: '100%',\r\n\r\n        justifyContent: 'flex-end'\r\n    },\r\n\r\n    txtLista: {\r\n        fontFamily: 'Arial',\r\n        fontSize: '100%',\r\n        color: 'white',\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}