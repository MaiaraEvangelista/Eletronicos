{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigio\\\\Desktop\\\\Eletronicos\\\\tcc\\\\src\\\\pages\\\\cadastro_user\\\\cadastroUser.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Style } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport { max } from \"react-native-reanimated\";\n\nvar cadastroUser = function (_Component) {\n  _inherits(cadastroUser, _Component);\n\n  var _super = _createSuper(cadastroUser);\n\n  function cadastroUser(props) {\n    var _this;\n\n    _classCallCheck(this, cadastroUser);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      celular: '',\n      CEP: ''\n    };\n    return _this;\n  }\n\n  _createClass(cadastroUser, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.triangleCorner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.ctnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.h1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.h1Style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }\n      }, \"Cadastro\")), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }), React.createElement(TextInputMask, {\n        type: 'cel-phone',\n        options: {\n          maskType: 'BRL',\n          withDDD: true,\n          dddMask: '(99) '\n        },\n        value: this.state.celular,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            celular: x\n          });\n        },\n        style: styles.TxtInput,\n        placeholder: \"Celular\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Senha\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        keyboardType: \"visible-password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInputMask, {\n        type: 'custom',\n        options: {\n          mask: 11111 - 111\n        },\n        value: this.state.CEP,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            CEP: x\n          });\n        },\n        style: styles.TxtInput,\n        placeholder: \"CEP\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 20\n        }\n      })), React.createElement(View, {\n        style: styles.btnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return cadastroUser;\n}(Component);\n\nexport { cadastroUser as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  triangleCorner: {\n    width: 0,\n    height: 0,\n    backgroundColor: \"transparent\",\n    borderStyle: \"solid\",\n    borderRightWidth: 300,\n    borderTopWidth: 300,\n    borderRightColor: \"transparent\",\n    borderTopColor: \"#00873B\"\n  },\n  ctnInput: {\n    flex: 1,\n    backgroundColor: 'blue',\n    justifyContent: 'space-around',\n    position: 'relative',\n    bottom: 30\n  },\n  h1: {\n    flex: 0.1,\n    backgroundColor: 'green',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  h1Style: {\n    fontSize: 25,\n    fontFamily: 'Arial',\n    fontWeight: 'bold'\n  },\n  inputStyle: {\n    flex: 0.12,\n    backgroundColor: 'yellow',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  TxtInput: {\n    width: '40%',\n    height: '70%',\n    borderColor: '#00873B',\n    borderWidth: 4,\n    borderRadius: 10,\n    fontSize: 17,\n    paddingLeft: 7\n  },\n  btnInput: {\n    flex: 0.1,\n    backgroundColor: 'orange'\n  }\n});","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/Eletronicos/tcc/src/pages/cadastro_user/cadastroUser.js"],"names":["React","Component","Style","ScrollView","TextInput","TextInputMask","max","cadastroUser","props","state","celular","CEP","styles","container","triangleCorner","ctnInput","h1","h1Style","inputStyle","TxtInput","maskType","withDDD","dddMask","x","setState","mask","btnInput","StyleSheet","create","flex","width","height","backgroundColor","borderStyle","borderRightWidth","borderTopWidth","borderRightColor","borderTopColor","justifyContent","position","bottom","alignItems","fontSize","fontFamily","fontWeight","flexDirection","borderColor","borderWidth","borderRadius","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, Style, TouchableOpacity } from \"react-native\";\r\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\r\nimport { TextInputMask } from 'react-native-masked-text'\r\nimport { max } from \"react-native-reanimated\";\r\n\r\nexport default class cadastroUser extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            celular: '',\r\n            CEP: '',\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <View style={styles.container}>\r\n\r\n                <View style={styles.triangleCorner}/>\r\n\r\n            <View style={styles.ctnInput}>\r\n                <View style={styles.h1}>\r\n                  <Text style={styles.h1Style}>Cadastro</Text>\r\n                </View>\r\n\r\n                <View style={styles.inputStyle}>\r\n                  <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Nome completo\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"default\"\r\n                  />\r\n\r\n                  <TextInputMask\r\n                  type={'cel-phone'}\r\n                  options={{\r\n                    maskType: 'BRL',\r\n                    withDDD: true,\r\n                    dddMask: '(99) '\r\n                  }}\r\n                  value={this.state.celular}\r\n                  onChangeText={ x => \r\n                  {\r\n                    this.setState({\r\n                      celular : x\r\n                    })\r\n                  }} \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Celular\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Email\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                  />\r\n\r\n                <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Senha\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                    keyboardType=\"visible-password\"\r\n                    secureTextEntry={true}\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInputMask\r\n                type={'custom'}\r\n                options={{\r\n                  mask : 11111-111\r\n                }} \r\n                value={this.state.CEP}\r\n                onChangeText={ x => {\r\n                  this.setState({\r\n                    CEP : x\r\n                  })\r\n                }}\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"CEP\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n\r\n                  <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Nome completo\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Nome completo\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                  />\r\n                   <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Nome completo\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                  />\r\n                </View>\r\n\r\n                <View style={styles.btnInput}>\r\n\r\n                </View>\r\n            </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n  },\r\n\r\n  triangleCorner: {\r\n    width: 0,\r\n    height: 0,\r\n    backgroundColor: \"transparent\",\r\n    borderStyle: \"solid\",\r\n    borderRightWidth: 300,\r\n    borderTopWidth: 300,\r\n    borderRightColor: \"transparent\",\r\n    borderTopColor: \"#00873B\",\r\n  },\r\n\r\n  ctnInput : {\r\n    flex: 1,\r\n    backgroundColor: 'blue',\r\n\r\n    justifyContent: 'space-around',\r\n\r\n    position: 'relative',\r\n    bottom: 30,\r\n  },\r\n\r\n  h1: {\r\n    flex: 0.1,\r\n    backgroundColor: 'green',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  h1Style: {\r\n    fontSize : 25,\r\n    fontFamily : 'Arial',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  inputStyle: {\r\n    flex: 0.12,\r\n    backgroundColor: 'yellow',\r\n\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  \r\n  TxtInput: {\r\n    width: '40%',\r\n    height: '70%',\r\n\r\n    borderColor: '#00873B',\r\n    borderWidth: 4,\r\n    borderRadius: 10,\r\n\r\n    fontSize: 17,\r\n    paddingLeft: 7,\r\n  },\r\n\r\n  btnInput: {\r\n    flex: 0.1,\r\n    backgroundColor: 'orange',\r\n  },\r\n  \r\n})"]},"metadata":{},"sourceType":"module"}