{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigio\\\\Desktop\\\\SENAI\\\\Eletronicos\\\\tcc\\\\src\\\\pages\\\\user\\\\cadastroUser.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Style } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport { max } from \"react-native-reanimated\";\n\nvar cadastroUser = function (_Component) {\n  _inherits(cadastroUser, _Component);\n\n  var _super = _createSuper(cadastroUser);\n\n  function cadastroUser(props) {\n    var _this;\n\n    _classCallCheck(this, cadastroUser);\n\n    _this = _super.call(this, props);\n\n    _this.cadastrarUser = function () {\n      axios;\n    };\n\n    _this.buscarCep = function () {\n      axios(\"https://viacep.com.br/ws/\" + _this.state.CEP + \"/json/\").then(function (resposta) {\n        _this.setState({\n          endereco: resposta.data\n        });\n\n        console.log(resposta.data);\n      }).catch(function (erro) {\n        return console.log(erro);\n      });\n    };\n\n    _this.navegacao = function () {\n      _this.props.navigation.navigate('Login');\n    };\n\n    _this.state = {\n      celular: '',\n      CEP: '',\n      endereco: []\n    };\n    return _this;\n  }\n\n  _createClass(cadastroUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.buscarCep();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.ctnH1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.TouchH1,\n        onPress: this.navegacao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.imgH1,\n        source: require(\"../../../assets/Arrow.svg\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      })), React.createElement(Text, {\n        style: styles.txtH1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"Cadastro\")), React.createElement(View, {\n        style: styles.ctn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.ctnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }), React.createElement(TextInputMask, {\n        type: 'cel-phone',\n        options: {\n          maskType: 'BRL',\n          withDDD: true,\n          dddMask: '(99) '\n        },\n        value: this.state.celular,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            celular: x\n          });\n        },\n        style: styles.TxtInput,\n        placeholder: \"Celular\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Senha\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        keyboardType: \"visible-password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInputMask, {\n        type: 'custom',\n        options: {\n          mask: '99999-999'\n        },\n        value: this.state.CEP,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            CEP: x\n          });\n        },\n        style: styles.TxtInput,\n        placeholder: \" CEP\",\n        onChangeText: function onChangeText(CEP) {\n          return _this2.setState({\n            CEP: CEP\n          });\n        },\n        onBlur: this.buscarCep,\n        value: this.state.CEP,\n        id: \"cep\",\n        name: \"cep\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"UF\",\n        editable: false,\n        placeholderTextColor: \"black\",\n        value: this.state.endereco.uf,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Endere\\xE7o\",\n        editable: false,\n        placeholderTextColor: \"black\",\n        value: this.state.endereco.logradouro,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Complemento\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 20\n        }\n      })), React.createElement(View, {\n        style: styles.btnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.btnCtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.txtBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }, \"Cadastrar\")))), \"|\"));\n    }\n  }]);\n\n  return cadastroUser;\n}(Component);\n\nexport { cadastroUser as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  imgH1: {\n    width: '50%',\n    height: '100%'\n  },\n  ctnH1: {\n    flex: 0.3,\n    backgroundColor: '#00873B',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  TouchH1: {\n    width: '20%',\n    height: '10%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  txtH1: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  ctnInput: {\n    flex: 0.9,\n    justifyContent: 'space-around'\n  },\n  ctn: {\n    flex: 0.7,\n    justifyContent: 'center'\n  },\n  inputStyle: {\n    flex: 0.12,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  TxtInput: {\n    width: '40%',\n    height: '70%',\n    borderColor: '#00873B',\n    borderWidth: 4,\n    borderRadius: 10,\n    fontSize: 17,\n    paddingLeft: 7\n  },\n  btnInput: {\n    flex: 0.1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnCtn: {\n    width: '35%',\n    height: '80%',\n    backgroundColor: '#008763',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  txtBtn: {\n    color: 'white',\n    fontSize: 20,\n    fontFamily: 'Arial'\n  }\n});","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/SENAI/Eletronicos/tcc/src/pages/user/cadastroUser.js"],"names":["axios","React","Component","Style","ScrollView","TextInput","TextInputMask","max","cadastroUser","props","cadastrarUser","buscarCep","state","CEP","then","resposta","setState","endereco","data","console","log","catch","erro","navegacao","navigation","navigate","celular","styles","container","ctnH1","TouchH1","imgH1","require","txtH1","ctn","ctnInput","inputStyle","TxtInput","maskType","withDDD","dddMask","x","mask","uf","logradouro","btnInput","btnCtn","txtBtn","StyleSheet","create","flex","width","height","backgroundColor","alignItems","flexDirection","justifyContent","fontSize","fontWeight","color","borderColor","borderWidth","borderRadius","paddingLeft","fontFamily"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, Style, TouchableOpacity, ImageBackground, Image } from \"react-native\";\r\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\r\nimport { TextInputMask } from 'react-native-masked-text'\r\nimport { max } from \"react-native-reanimated\";\r\n\r\n\r\nexport default class cadastroUser extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            celular: '',\r\n            CEP: '',\r\n            endereco: []\r\n        }\r\n        \r\n    }\r\n\r\n    cadastrarUser = () =>\r\n    {\r\n      axios\r\n    }\r\n\r\n    buscarCep = () => {\r\n      axios(`https://viacep.com.br/ws/${this.state.CEP}/json/`)\r\n      .then(resposta => {\r\n        this.setState({endereco: resposta.data})\r\n        console.log(resposta.data)\r\n      })\r\n\r\n      .catch(erro => console.log(erro))\r\n    }\r\n\r\n    navegacao = () => \r\n    {\r\n      this.props.navigation.navigate('Login')\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.buscarCep();\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return(\r\n            <View style={styles.container}>\r\n\r\n              <View style={styles.ctnH1}>\r\n                <TouchableOpacity style={styles.TouchH1} onPress={this.navegacao}>\r\n                  <Image style={styles.imgH1} source={require('../../../assets/Arrow.svg')}/>\r\n                </TouchableOpacity>\r\n                <Text style={styles.txtH1}>Cadastro</Text>\r\n              </View>\r\n\r\n\r\n            <View style={styles.ctn}>\r\n\r\n              <View style={styles.ctnInput}>\r\n\r\n                <View style={styles.inputStyle}>\r\n                  <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Nome completo\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"default\"\r\n                  />\r\n\r\n                  <TextInputMask\r\n                  type={'cel-phone'}\r\n                  options={{\r\n                    maskType: 'BRL',\r\n                    withDDD: true,\r\n                    dddMask: '(99) '\r\n                  }}\r\n                  value={this.state.celular}\r\n                  onChangeText={ x =>\r\n                  {\r\n                    this.setState({\r\n                      celular : x\r\n                    })\r\n                  }}\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Celular\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Email\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                  />\r\n\r\n                <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Senha\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                    keyboardType=\"visible-password\"\r\n                    secureTextEntry={true}\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInputMask\r\n                type={'custom'}\r\n                options={{\r\n                  mask : '99999-999'\r\n                }}\r\n                value={this.state.CEP}\r\n                onChangeText={ x => {\r\n                  this.setState({\r\n                    CEP : x\r\n                  })\r\n                }}\r\n                    style={styles.TxtInput}\r\n                    placeholder=' CEP' onChangeText={(CEP) => this.setState({ CEP: CEP })}\r\n                    onBlur={this.buscarCep}\r\n                    value={this.state.CEP} id=\"cep\" name=\"cep\"\r\n                    placeholderTextColor=\"black\"                   \r\n                  />\r\n\r\n                  <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"UF\"\r\n                    editable={false}\r\n                    placeholderTextColor=\"black\"\r\n                    value={this.state.endereco.uf}\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Endereço\"\r\n                    editable={false}\r\n                    placeholderTextColor=\"black\"\r\n                    value={this.state.endereco.logradouro}\r\n                  />\r\n                   <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Complemento\"\r\n                    placeholderTextColor=\"black\"\r\n                    \r\n                  />\r\n                </View>\r\n\r\n                \r\n\r\n                <View style={styles.btnInput}>\r\n                  <TouchableOpacity style={styles.btnCtn}>\r\n                    <Text style={styles.txtBtn}>Cadastrar</Text>\r\n                  </TouchableOpacity>\r\n            </View>\r\n                </View>|\r\n              </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n\r\n  },\r\n\r\n  imgH1: {\r\n    width: '50%',\r\n    height: '100%',\r\n  },\r\n\r\n  ctnH1: {\r\n    flex: 0.3,\r\n    backgroundColor: '#00873B',\r\n\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  \r\n  TouchH1: {\r\n    width: '20%',\r\n    height: '10%',\r\n    // backgroundColor : 'blue',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  txtH1: {\r\n    fontSize: 25,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n\r\n  ctnInput : {\r\n    flex: 0.9,\r\n    // backgroundColor: 'blue',\r\n\r\n    justifyContent: 'space-around',\r\n  },\r\n\r\n  ctn: {\r\n    flex: 0.7,\r\n    // backgroundColor : 'blue',\r\n\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  inputStyle: {\r\n    flex: 0.12,\r\n    // backgroundColor: 'yellow',\r\n\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n\r\n  },\r\n\r\n  TxtInput: {\r\n    width: '40%',\r\n    height: '70%',\r\n\r\n    borderColor: '#00873B',\r\n    borderWidth: 4,\r\n    borderRadius: 10,\r\n\r\n    fontSize: 17,\r\n    paddingLeft: 7,\r\n  },\r\n\r\n  btnInput: {\r\n    flex: 0.1,\r\n    // backgroundColor: 'orange',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  btnCtn: {\r\n    width: '35%',\r\n    height: '80%',\r\n    backgroundColor: '#008763',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n    borderRadius: 10,\r\n  },\r\n\r\n  txtBtn: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    fontFamily : 'Arial',\r\n  },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}