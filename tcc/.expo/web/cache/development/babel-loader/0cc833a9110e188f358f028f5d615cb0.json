{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigio\\\\Desktop\\\\Eletronicos\\\\tcc\\\\src\\\\pages\\\\cadastro_user\\\\cadastroUser.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Style } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport { max } from \"react-native-reanimated\";\n\nvar cadastroUser = function (_Component) {\n  _inherits(cadastroUser, _Component);\n\n  var _super = _createSuper(cadastroUser);\n\n  function cadastroUser(props) {\n    var _this;\n\n    _classCallCheck(this, cadastroUser);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      celular: '',\n      CEP: ''\n    };\n    return _this;\n  }\n\n  _createClass(cadastroUser, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.ctnH1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.TouchH1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.imgH1,\n        source: require(\"../../../assets/Arrow.svg\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }\n      })), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.ctn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.ctnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }), React.createElement(TextInputMask, {\n        type: 'cel-phone',\n        options: {\n          maskType: 'BRL',\n          withDDD: true,\n          dddMask: '(99) '\n        },\n        value: this.state.celular,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            celular: x\n          });\n        },\n        style: styles.TxtInput,\n        placeholder: \"Celular\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Senha\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        keyboardType: \"visible-password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInputMask, {\n        type: 'custom',\n        options: {\n          mask: '99999-999'\n        },\n        value: this.state.CEP,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            CEP: x\n          });\n        },\n        style: styles.TxtInput,\n        placeholder: \"CEP\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Rua\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Endere\\xE7o\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Complemento\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }\n      })), React.createElement(View, {\n        style: styles.btnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.btnCtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.txtBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"Cadastrar\"))))));\n    }\n  }]);\n\n  return cadastroUser;\n}(Component);\n\nexport { cadastroUser as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  imgH1: {\n    width: '10%',\n    height: '10%'\n  },\n  ctnH1: {\n    flex: 0.3,\n    backgroundColor: '#00873B'\n  },\n  TouchH1: {\n    width: '50%',\n    height: '',\n    backgroundColor: 'blue'\n  },\n  ctnInput: {\n    flex: 0.7,\n    justifyContent: 'space-around'\n  },\n  ctn: {\n    flex: 0.7,\n    justifyContent: 'center'\n  },\n  inputStyle: {\n    flex: 0.12,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  TxtInput: {\n    width: '40%',\n    height: '70%',\n    borderColor: '#00873B',\n    borderWidth: 4,\n    borderRadius: 10,\n    fontSize: 17,\n    paddingLeft: 7\n  },\n  btnInput: {\n    flex: 0.1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnCtn: {\n    width: '35%',\n    height: '80%',\n    backgroundColor: '#008763',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  txtBtn: {\n    color: 'white',\n    fontSize: 20,\n    fontFamily: 'Arial'\n  }\n});","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/Eletronicos/tcc/src/pages/cadastro_user/cadastroUser.js"],"names":["React","Component","Style","ScrollView","TextInput","TextInputMask","max","cadastroUser","props","state","celular","CEP","styles","container","ctnH1","TouchH1","imgH1","require","ctn","ctnInput","inputStyle","TxtInput","maskType","withDDD","dddMask","x","setState","mask","btnInput","btnCtn","txtBtn","StyleSheet","create","flex","width","height","backgroundColor","justifyContent","flexDirection","alignItems","borderColor","borderWidth","borderRadius","fontSize","paddingLeft","color","fontFamily"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, Style, TouchableOpacity, ImageBackground, Image } from \"react-native\";\r\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\r\nimport { TextInputMask } from 'react-native-masked-text'\r\nimport { max } from \"react-native-reanimated\";\r\n\r\n\r\nexport default class cadastroUser extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            celular: '',\r\n            CEP: '',\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <View style={styles.container}>\r\n\r\n              <View style={styles.ctnH1}>\r\n                <TouchableOpacity style={styles.TouchH1}>\r\n                  <Image style={styles.imgH1} source={require('../../../assets/Arrow.svg')}/>\r\n                </TouchableOpacity>\r\n                <Text></Text>\r\n              </View>\r\n\r\n\r\n            <View style={styles.ctn}>\r\n\r\n              <View style={styles.ctnInput}>\r\n\r\n                <View style={styles.inputStyle}>\r\n                  <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Nome completo\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"default\"\r\n                  />\r\n\r\n                  <TextInputMask\r\n                  type={'cel-phone'}\r\n                  options={{\r\n                    maskType: 'BRL',\r\n                    withDDD: true,\r\n                    dddMask: '(99) '\r\n                  }}\r\n                  value={this.state.celular}\r\n                  onChangeText={ x =>\r\n                  {\r\n                    this.setState({\r\n                      celular : x\r\n                    })\r\n                  }}\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Celular\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Email\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                  />\r\n\r\n                <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Senha\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                    keyboardType=\"visible-password\"\r\n                    secureTextEntry={true}\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInputMask\r\n                type={'custom'}\r\n                options={{\r\n                  mask : '99999-999'\r\n                }}\r\n                value={this.state.CEP}\r\n                onChangeText={ x => {\r\n                  this.setState({\r\n                    CEP : x\r\n                  })\r\n                }}\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"CEP\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n\r\n                  <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Rua\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Endereço\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                   <TextInput\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Complemento\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                </View>\r\n\r\n                <View style={styles.btnInput}>\r\n                  <TouchableOpacity style={styles.btnCtn}>\r\n                    <Text style={styles.txtBtn}>Cadastrar</Text>\r\n                  </TouchableOpacity>\r\n            </View>\r\n                </View>\r\n              </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n\r\n  },\r\n\r\n  imgH1: {\r\n    width: '10%',\r\n    height: '10%',\r\n  },\r\n\r\n  ctnH1: {\r\n    flex: 0.3,\r\n    backgroundColor: '#00873B'\r\n  },\r\n  \r\n  TouchH1: {\r\n    width: '50%',\r\n    height: '',\r\n    backgroundColor : 'blue',\r\n  },\r\n\r\n  ctnInput : {\r\n    flex: 0.7,\r\n    // backgroundColor: 'blue',\r\n\r\n    justifyContent: 'space-around',\r\n  },\r\n\r\n  ctn: {\r\n    flex: 0.7,\r\n    // backgroundColor : 'blue',\r\n\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  inputStyle: {\r\n    flex: 0.12,\r\n    // backgroundColor: 'yellow',\r\n\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n\r\n  },\r\n\r\n  TxtInput: {\r\n    width: '40%',\r\n    height: '70%',\r\n\r\n    borderColor: '#00873B',\r\n    borderWidth: 4,\r\n    borderRadius: 10,\r\n\r\n    fontSize: 17,\r\n    paddingLeft: 7,\r\n  },\r\n\r\n  btnInput: {\r\n    flex: 0.1,\r\n    // backgroundColor: 'orange',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  btnCtn: {\r\n    width: '35%',\r\n    height: '80%',\r\n    backgroundColor: '#008763',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n    borderRadius: 10,\r\n  },\r\n\r\n  txtBtn: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    fontFamily : 'Arial',\r\n  },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}