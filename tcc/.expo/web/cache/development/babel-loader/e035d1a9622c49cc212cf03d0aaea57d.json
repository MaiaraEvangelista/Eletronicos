{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigio\\\\Desktop\\\\Eletronicos\\\\React_Native\\\\tcc\\\\src\\\\pages\\\\cadastro_user\\\\cadastroUser.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Style } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport { max } from \"react-native-reanimated\";\n\nvar cadastroUser = function (_Component) {\n  _inherits(cadastroUser, _Component);\n\n  var _super = _createSuper(cadastroUser);\n\n  function cadastroUser(props) {\n    var _this;\n\n    _classCallCheck(this, cadastroUser);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      celular: '',\n      CEP: ''\n    };\n    return _this;\n  }\n\n  _createClass(cadastroUser, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.triangleCorner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.ctnCad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.h1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, \"Cadastro\"), React.createElement(View, {\n        style: styles.NomeCtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputNome,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.InfsInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.Infs,\n        placeholder: \"Email\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }), React.createElement(TextInput, {\n        style: styles.Infs,\n        placeholder: \"Senha\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"visible-password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.ctnMeio,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInputMask, {\n        type: 'cel-phone',\n        style: styles.Infs,\n        options: {\n          maskType: 'BRL',\n          withDDD: true,\n          dddMask: '(99)'\n        },\n        value: this.state.celular,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            celular: text\n          });\n        },\n        placeholder: \"Celular\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.ctnMeio,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.linha,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.h2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, \"Endere\\xE7o\"), React.createElement(View, {\n        style: styles.linha,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.ctnMeio,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInputMask, {\n        type: 'custom',\n        style: styles.Infs,\n        options: {\n          mask: '99999-999'\n        },\n        value: this.state.CEP,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            CEP: text\n          });\n        },\n        placeholder: \"CEP\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.ctnMeio,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.btnCEP,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }, \"Buscar\"))), React.createElement(View, {\n        style: styles.InfsInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.Infs,\n        placeholder: \"Complemento\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.Infs,\n        placeholder: \"Rua\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.ctnMeio,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.btnCEP,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.textBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }\n      }, \"Cadastrar\")))));\n    }\n  }]);\n\n  return cadastroUser;\n}(Component);\n\nexport { cadastroUser as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  triangleCorner: {\n    width: 0,\n    height: 0,\n    backgroundColor: \"transparent\",\n    borderStyle: \"solid\",\n    borderRightWidth: 300,\n    borderTopWidth: 300,\n    borderRightColor: \"transparent\",\n    borderTopColor: \"#008763\"\n  },\n  ctnCad: {\n    marginHorizontal: 30,\n    textAlign: 'center'\n  },\n  h1: {\n    fontSize: 30,\n    fontFamily: 'Arial'\n  },\n  NomeCtn: {\n    height: max,\n    width: max\n  },\n  inputNome: {\n    height: 50,\n    width: max,\n    backgroundColor: 'white',\n    marginTop: 40,\n    paddingLeft: 10,\n    color: 'black',\n    fontSize: 18,\n    fontFamily: 'Arial',\n    borderColor: '#008763',\n    borderWidth: 3,\n    borderRadius: 7\n  },\n  InfsInput: {\n    height: max,\n    width: max,\n    marginTop: 20,\n    justifyContent: 'space-between',\n    flexDirection: \"row\"\n  },\n  Infs: {\n    height: 50,\n    width: 150,\n    backgroundColor: 'white',\n    paddingLeft: 10,\n    color: 'black',\n    fontSize: 18,\n    fontFamily: 'Arial',\n    borderColor: '#008763',\n    borderWidth: 3,\n    borderRadius: 7\n  },\n  ctnMeio: {\n    height: max,\n    width: max,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: \"row\",\n    marginTop: 20\n  },\n  linha: {\n    borderWidth: 1,\n    width: 40\n  },\n  h2: {\n    padding: 10,\n    fontFamily: 'Arial',\n    fontSize: 25\n  },\n  btnCEP: {\n    height: 50,\n    width: 150,\n    backgroundColor: '#008763',\n    borderColor: '#008763',\n    borderWidth: 3,\n    borderRadius: 7,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textBtn: {\n    color: 'white',\n    fontFamily: 'Arial',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/Eletronicos/React_Native/tcc/src/pages/cadastro_user/cadastroUser.js"],"names":["React","Component","Style","ScrollView","TextInput","TextInputMask","max","cadastroUser","props","state","celular","CEP","styles","container","triangleCorner","ctnCad","h1","NomeCtn","inputNome","InfsInput","Infs","ctnMeio","maskType","withDDD","dddMask","text","setState","linha","h2","mask","btnCEP","textBtn","StyleSheet","create","flex","width","height","backgroundColor","borderStyle","borderRightWidth","borderTopWidth","borderRightColor","borderTopColor","marginHorizontal","textAlign","fontSize","fontFamily","marginTop","paddingLeft","color","borderColor","borderWidth","borderRadius","justifyContent","flexDirection","alignItems","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, Style, TouchableOpacity } from \"react-native\";\r\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\r\nimport { TextInputMask } from 'react-native-masked-text'\r\nimport { max } from \"react-native-reanimated\";\r\n\r\nexport default class cadastroUser extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            celular: '',\r\n            CEP: '',\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <View style={styles.container}>\r\n                <View style={styles.triangleCorner}/>\r\n\r\n                    <View style={styles.ctnCad}>\r\n                        <Text style={styles.h1}>Cadastro</Text>\r\n\r\n                        <View style={styles.NomeCtn}>\r\n                            <TextInput\r\n                             style={styles.inputNome}\r\n                             placeholder=\"Nome completo\"\r\n                             placeholderTextColor=\"black\"\r\n                             />\r\n                        </View>\r\n\r\n                        <View style={styles.InfsInput}>\r\n                            <TextInput\r\n                             style={styles.Infs}\r\n                             placeholder=\"Email\"\r\n                             placeholderTextColor=\"black\"\r\n                             />\r\n\r\n                            <TextInput\r\n                             style={styles.Infs}\r\n                             placeholder=\"Senha\"\r\n                             placeholderTextColor=\"black\"\r\n                             keyboardType=\"visible-password\"\r\n                             secureTextEntry={true}\r\n                             />\r\n                        </View>\r\n\r\n                        <View style={styles.ctnMeio}>\r\n                            <TextInputMask\r\n                            type={'cel-phone'}\r\n                            style={styles.Infs}\r\n                                options={{\r\n                                    maskType: 'BRL',\r\n                                    withDDD: true,\r\n                                    dddMask: '(99)'\r\n                                    }}\r\n\r\n                                    value={this.state.celular}\r\n                                    onChangeText={text => {\r\n                                      this.setState({\r\n                                        celular: text\r\n                                      })\r\n                                    }}\r\n                             placeholder=\"Celular\"\r\n                             placeholderTextColor=\"black\"\r\n                             />\r\n                        </View>\r\n                        \r\n                        <View style={styles.ctnMeio}>\r\n                            <View style={styles.linha}></View>\r\n                            <Text style={styles.h2}>Endereço</Text>\r\n                            <View style={styles.linha}></View>\r\n                        </View>\r\n\r\n                        <View style={styles.ctnMeio}>\r\n                        <TextInputMask\r\n                            type={'custom'}\r\n                            style={styles.Infs}\r\n                                options={{\r\n                                    mask: '99999-999'\r\n                                    }}\r\n\r\n                                    value={this.state.CEP}\r\n                                    onChangeText={text => {\r\n                                      this.setState({\r\n                                       CEP: text\r\n                                      })\r\n                                    }}\r\n                             placeholder=\"CEP\"\r\n                             placeholderTextColor=\"black\"\r\n                             />\r\n                        </View>\r\n\r\n                        <View style={styles.ctnMeio}>\r\n                            <TouchableOpacity style={styles.btnCEP}>\r\n                                <Text style={styles.textBtn}>Buscar</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <View style={styles.InfsInput}>\r\n                        <TextInput\r\n                             style={styles.Infs}\r\n                             placeholder=\"Complemento\"\r\n                             placeholderTextColor=\"black\"\r\n                             />\r\n\r\n                            <TextInput\r\n                             style={styles.Infs}\r\n                             placeholder=\"Rua\"\r\n                             placeholderTextColor=\"black\"\r\n                             />\r\n                        </View>\r\n\r\n                        <View style={styles.ctnMeio}>\r\n                            <TouchableOpacity style={styles.btnCEP}>\r\n                                <Text style={styles.textBtn}>Cadastrar</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n  },\r\n\r\n  triangleCorner: {\r\n    width: 0,\r\n    height: 0,\r\n    backgroundColor: \"transparent\",\r\n    borderStyle: \"solid\",\r\n    borderRightWidth: 300,\r\n    borderTopWidth: 300,\r\n    borderRightColor: \"transparent\",\r\n    borderTopColor: \"#008763\",\r\n  },\r\n\r\n  ctnCad: {\r\n    // backgroundColor: 'green',\r\n    marginHorizontal: 30,\r\n    textAlign: 'center'\r\n  },\r\n\r\n  h1: {\r\n      fontSize: 30,\r\n      fontFamily: 'Arial'\r\n  },\r\n\r\n  NomeCtn: {\r\n    height: max,\r\n    width: max,\r\n    // backgroundColor: 'blue',\r\n  },\r\n\r\n  inputNome: {\r\n    height: 50,\r\n    width: max,\r\n    backgroundColor: 'white',\r\n\r\n    marginTop: 40,\r\n    paddingLeft: 10,\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontFamily: 'Arial',\r\n\r\n    borderColor: '#008763',\r\n    borderWidth: 3,\r\n    borderRadius: 7,\r\n  },\r\n\r\n  InfsInput: {\r\n    height: max,\r\n    width: max,\r\n    marginTop: 20,\r\n    justifyContent: 'space-between',\r\n    flexDirection: \"row\",\r\n  },\r\n  \r\n  Infs: {\r\n    height: 50,\r\n    width: 150,\r\n    backgroundColor: 'white',\r\n\r\n    paddingLeft: 10,\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontFamily: 'Arial',\r\n\r\n    borderColor: '#008763',\r\n    borderWidth: 3,\r\n    borderRadius: 7,\r\n  },\r\n\r\n  ctnMeio: {\r\n    height: max,\r\n    width: max,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: \"row\",\r\n    marginTop: 20,\r\n  },    \r\n\r\n  linha: {\r\n    borderWidth: 1,\r\n    width: 40,\r\n  },\r\n\r\n  h2: {\r\n    padding: 10,\r\n    fontFamily: 'Arial',\r\n    fontSize: 25,\r\n  },\r\n\r\n  btnCEP: {\r\n    height: 50,\r\n    width: 150,\r\n    backgroundColor: '#008763',\r\n\r\n    borderColor: '#008763',\r\n    borderWidth: 3,\r\n    borderRadius: 7,\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  textBtn: {\r\n    color: 'white',\r\n    fontFamily: 'Arial',\r\n    fontSize: 20,\r\n  },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}