{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gigio\\\\Desktop\\\\Eletronicos\\\\tcc\\\\src\\\\pages\\\\user\\\\edicao.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInputMask } from 'react-native-masked-text';\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      celular: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.cellCtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.cellImg,\n        source: require(\"../../../assets/cell.svg\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.ctnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.InputArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.justInputs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.editInput,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }\n      }), React.createElement(TextInputMask, {\n        type: 'cel-phone',\n        options: {\n          maskType: 'BRL',\n          withDDD: true,\n          dddMask: '(99) '\n        },\n        value: this.state.celular,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            celular: x\n          });\n        },\n        style: styles.editInput,\n        placeholder: \"Celular\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }), React.createElement(TextInput, {\n        style: styles.editInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }), React.createElement(TextInput, {\n        style: styles.editInput,\n        placeholder: \"Senha\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.btnArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.btnEditar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.btnTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, \"Editar\")), React.createElement(TouchableOpacity, {\n        style: styles.btnEditar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.btnTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, \"Editar\"))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  cellCtn: {\n    flex: 0.2,\n    marginTop: 40,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cellImg: {\n    width: '30%',\n    height: '100%'\n  },\n  ctnInput: {\n    flex: 0.6,\n    justifyContent: 'flex-end'\n  },\n  InputArea: {\n    width: '100%',\n    height: '80%',\n    backgroundColor: 'gray'\n  },\n  justInputs: {\n    width: '100%',\n    height: '70%',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  editInput: {\n    width: '40%',\n    height: '25%',\n    borderColor: '#00873B',\n    borderWidth: 3,\n    borderRadius: 10,\n    fontSize: 17,\n    paddingLeft: 7\n  },\n  btnArea: {\n    width: '100%',\n    height: '30%',\n    backgroundColor: 'red',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  btnEditar: {\n    width: '30%',\n    height: '50%',\n    borderColor: 'black',\n    borderWidth: 3,\n    borderRadius: 7,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  btnTxt: {\n    fontSize: 17,\n    fontFamily: 'Arial'\n  }\n});","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/Eletronicos/tcc/src/pages/user/edicao.js"],"names":["StatusBar","React","Component","TextInputMask","Login","props","state","celular","styles","container","cellCtn","cellImg","require","ctnInput","InputArea","justInputs","editInput","maskType","withDDD","dddMask","x","setState","btnArea","btnEditar","btnTxt","StyleSheet","create","flex","marginTop","justifyContent","alignItems","width","height","backgroundColor","flexWrap","flexDirection","borderColor","borderWidth","borderRadius","fontSize","paddingLeft","fontFamily"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport { TextInputMask } from 'react-native-masked-text'\r\n\r\nexport default class Login extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            celular : ''\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.cellCtn}>\r\n                    <Image style={styles.cellImg} source={require('../../../assets/cell.svg')}/>\r\n                </View>\r\n\r\n                <View style={styles.ctnInput}>\r\n                    <View style={styles.InputArea}>\r\n\r\n                        <View style={styles.justInputs}>\r\n                            <TextInput\r\n                                style={styles.editInput}\r\n                                placeholder=\"Nome completo\"\r\n                                placeholderTextColor='black'\r\n                            />\r\n                            <TextInputMask\r\n                                type={'cel-phone'}\r\n                                options={{\r\n                                    maskType: 'BRL',\r\n                                    withDDD: true,\r\n                                    dddMask: '(99) '\r\n                                }}\r\n                                value={this.state.celular}\r\n                                onChangeText={ x =>\r\n                                {\r\n                                    this.setState({\r\n                                    celular : x\r\n                                    })\r\n                                }}\r\n                                    style={styles.editInput}\r\n                                    placeholder=\"Celular\"\r\n                                    placeholderTextColor=\"black\"\r\n                                />\r\n                            <TextInput\r\n                                style={styles.editInput}\r\n                                placeholder=\"Email\"\r\n                                placeholderTextColor='black'\r\n                            />\r\n                            <TextInput\r\n                                style={styles.editInput}\r\n                                placeholder=\"Senha\"\r\n                                placeholderTextColor='black'\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={styles.btnArea}>\r\n                            <TouchableOpacity style={styles.btnEditar}>\r\n                                <Text style={styles.btnTxt}>Editar</Text>\r\n                            </TouchableOpacity>\r\n\r\n                            <TouchableOpacity style={styles.btnEditar}>\r\n                                <Text style={styles.btnTxt}>Editar</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        \r\n                    </View>\r\n                </View>\r\n            </View>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n\r\n    cellCtn: {\r\n        flex: 0.2,\r\n        // backgroundColor: 'green',\r\n\r\n        marginTop: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    cellImg: {\r\n        width: '30%',\r\n        height: '100%',\r\n    },\r\n\r\n    ctnInput: {\r\n        flex: 0.6,\r\n        // backgroundColor: 'blue',\r\n\r\n        justifyContent: 'flex-end',\r\n    },\r\n\r\n    InputArea: {\r\n        width: '100%',\r\n        height: '80%',\r\n\r\n         backgroundColor: 'gray',\r\n    },\r\n\r\n    justInputs: {\r\n        width: '100%',\r\n        height: '70%',\r\n\r\n        // backgroundColor: 'red',\r\n\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    editInput: {\r\n       \r\n        width: '40%',\r\n        height: '25%',\r\n        \r\n        borderColor: '#00873B',\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        \r\n        fontSize: 17,\r\n        paddingLeft: 7,\r\n          \r\n    },\r\n\r\n    btnArea: {\r\n        width: '100%',\r\n        height: '30%',\r\n        backgroundColor: 'red',\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n    },\r\n\r\n    btnEditar: {\r\n        width: '30%',\r\n        height: '50%',\r\n\r\n        borderColor: 'black',\r\n        borderWidth: 3,\r\n        borderRadius: 7,\r\n\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    btnTxt: {\r\n        fontSize: 17,\r\n        fontFamily: 'Arial',\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}