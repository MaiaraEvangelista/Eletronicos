{"ast":null,"code":"import { defineAnimation } from \"./util\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport function withDecay(userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(0, function () {\n    'worklet';\n\n    var _a;\n\n    var config = {\n      deceleration: 0.998,\n      velocityFactor: Platform.OS !== 'web' ? 1 : 1000,\n      velocity: 0\n    };\n\n    if (userConfig) {\n      Object.keys(userConfig).forEach(function (key) {\n        return config[key] = userConfig[key];\n      });\n    }\n\n    var VELOCITY_EPS = Platform.OS !== 'web' ? 1 : 1 / 20;\n    var SLOPE_FACTOR = 0.1;\n\n    function decay(animation, now) {\n      var lastTimestamp = animation.lastTimestamp,\n          startTimestamp = animation.startTimestamp,\n          initialVelocity = animation.initialVelocity,\n          current = animation.current,\n          velocity = animation.velocity;\n      var deltaTime = Math.min(now - lastTimestamp, 64);\n      var v = velocity * Math.exp(-(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR);\n      animation.current = current + v * config.velocityFactor * deltaTime / 1000;\n      animation.velocity = v;\n      animation.lastTimestamp = now;\n\n      if (config.clamp) {\n        if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n          animation.current = config.clamp[0];\n          return true;\n        } else if (initialVelocity > 0 && animation.current >= config.clamp[1]) {\n          animation.current = config.clamp[1];\n          return true;\n        }\n      }\n\n      return Math.abs(v) < VELOCITY_EPS;\n    }\n\n    function validateConfig() {\n      if (config.clamp) {\n        if (!Array.isArray(config.clamp)) {\n          throw Error(\"config.clamp must be an array but is \" + typeof config.clamp);\n        }\n\n        if (config.clamp.length !== 2) {\n          throw Error(\"clamp array must contain 2 items but is given \" + config.clamp.length);\n        }\n      }\n\n      if (config.velocityFactor <= 0) {\n        throw Error(\"config.velocityFactor must be greather then 0 but is \" + config.velocityFactor);\n      }\n    }\n\n    function onStart(animation, value, now) {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.startTimestamp = now;\n      animation.initialVelocity = config.velocity;\n      validateConfig();\n    }\n\n    return {\n      onFrame: decay,\n      onStart: onStart,\n      callback: callback,\n      velocity: (_a = config.velocity) !== null && _a !== void 0 ? _a : 0,\n      initialVelocity: 0,\n      current: 0,\n      lastTimestamp: 0,\n      startTimestamp: 0\n    };\n  });\n}","map":{"version":3,"sources":["C:/Users/52672266883/Desktop/PROJETO AQ/Eletronicos/tcc/node_modules/react-native-reanimated/lib/reanimated2/animation/decay.js"],"names":["defineAnimation","withDecay","userConfig","callback","_a","config","deceleration","velocityFactor","Platform","OS","velocity","Object","keys","forEach","key","VELOCITY_EPS","SLOPE_FACTOR","decay","animation","now","lastTimestamp","startTimestamp","initialVelocity","current","deltaTime","Math","min","v","exp","clamp","abs","validateConfig","Array","isArray","Error","length","onStart","value","onFrame"],"mappings":"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","sourcesContent":["import { defineAnimation } from './util';\r\nimport { Platform } from 'react-native';\r\nexport function withDecay(userConfig, callback) {\r\n    'worklet';\r\n    return defineAnimation(0, () => {\r\n        'worklet';\r\n        var _a;\r\n        const config = {\r\n            deceleration: 0.998,\r\n            velocityFactor: Platform.OS !== 'web' ? 1 : 1000,\r\n            velocity: 0,\r\n        };\r\n        if (userConfig) {\r\n            Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\r\n        }\r\n        const VELOCITY_EPS = Platform.OS !== 'web' ? 1 : 1 / 20;\r\n        const SLOPE_FACTOR = 0.1;\r\n        function decay(animation, now) {\r\n            const { lastTimestamp, startTimestamp, initialVelocity, current, velocity, } = animation;\r\n            const deltaTime = Math.min(now - lastTimestamp, 64);\r\n            const v = velocity *\r\n                Math.exp(-(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR);\r\n            animation.current =\r\n                current + (v * config.velocityFactor * deltaTime) / 1000; // /1000 because time is in ms not in s\r\n            animation.velocity = v;\r\n            animation.lastTimestamp = now;\r\n            if (config.clamp) {\r\n                if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\r\n                    animation.current = config.clamp[0];\r\n                    return true;\r\n                }\r\n                else if (initialVelocity > 0 &&\r\n                    animation.current >= config.clamp[1]) {\r\n                    animation.current = config.clamp[1];\r\n                    return true;\r\n                }\r\n            }\r\n            return Math.abs(v) < VELOCITY_EPS;\r\n        }\r\n        function validateConfig() {\r\n            if (config.clamp) {\r\n                if (!Array.isArray(config.clamp)) {\r\n                    throw Error(`config.clamp must be an array but is ${typeof config.clamp}`);\r\n                }\r\n                if (config.clamp.length !== 2) {\r\n                    throw Error(`clamp array must contain 2 items but is given ${config.clamp.length}`);\r\n                }\r\n            }\r\n            if (config.velocityFactor <= 0) {\r\n                throw Error(`config.velocityFactor must be greather then 0 but is ${config.velocityFactor}`);\r\n            }\r\n        }\r\n        function onStart(animation, value, now) {\r\n            animation.current = value;\r\n            animation.lastTimestamp = now;\r\n            animation.startTimestamp = now;\r\n            animation.initialVelocity = config.velocity;\r\n            validateConfig();\r\n        }\r\n        return {\r\n            onFrame: decay,\r\n            onStart,\r\n            callback,\r\n            velocity: (_a = config.velocity) !== null && _a !== void 0 ? _a : 0,\r\n            initialVelocity: 0,\r\n            current: 0,\r\n            lastTimestamp: 0,\r\n            startTimestamp: 0,\r\n        };\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}