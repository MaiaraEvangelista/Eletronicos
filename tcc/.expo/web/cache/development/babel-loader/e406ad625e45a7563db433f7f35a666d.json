{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { convertToHSVA, isColor, toRGBA } from \"../Colors\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nvar IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  var result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\nfunction recognizePrefixSuffix(value) {\n  'worklet';\n\n  var _a;\n\n  if (typeof value === 'string') {\n    var match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n\n    if (!match) {\n      throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n    }\n\n    var prefix = match[1];\n    var suffix = match[4];\n    var number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n    return {\n      prefix: prefix,\n      suffix: suffix,\n      strippedValue: parseFloat(number)\n    };\n  } else {\n    return {\n      strippedValue: value\n    };\n  }\n}\n\nfunction decorateAnimation(animation) {\n  'worklet';\n\n  if (animation.isHigherOrder) {\n    return;\n  }\n\n  var baseOnStart = animation.onStart;\n  var baseOnFrame = animation.onFrame;\n\n  var animationCopy = _extends({}, animation);\n\n  delete animationCopy.callback;\n\n  var prefNumberSuffOnStart = function prefNumberSuffOnStart(animation, value, timestamp, previousAnimation) {\n    var _a, _b, _c, _d;\n\n    var _recognizePrefixSuffi = recognizePrefixSuffix(value),\n        prefix = _recognizePrefixSuffi.prefix,\n        suffix = _recognizePrefixSuffi.suffix,\n        strippedValue = _recognizePrefixSuffi.strippedValue;\n\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n\n    var _recognizePrefixSuffi2 = recognizePrefixSuffix(animation.toValue),\n        strippedToValue = _recognizePrefixSuffi2.strippedValue;\n\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current = previousAnimation.strippedCurrent;\n    }\n\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n    animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current = ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') + previousAnimation.current + ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n    }\n  };\n\n  var prefNumberSuffOnFrame = function prefNumberSuffOnFrame(animation, timestamp) {\n    var _a, _b;\n\n    animation.current = animation.strippedCurrent;\n    var res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n    return res;\n  };\n\n  var tab = ['H', 'S', 'V', 'A'];\n\n  var colorOnStart = function colorOnStart(animation, value, timestamp, previousAnimation) {\n    var HSVAValue;\n    var HSVACurrent;\n    var HSVAToValue;\n    var res = [];\n\n    if (isColor(value)) {\n      HSVACurrent = convertToHSVA(animation.current);\n      HSVAValue = convertToHSVA(value);\n\n      if (animation.toValue) {\n        HSVAToValue = convertToHSVA(animation.toValue);\n      }\n    }\n\n    tab.forEach(function (i, index) {\n      animation[i] = _extends({}, animationCopy);\n      animation[i].current = HSVACurrent[index];\n      animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n      animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n      res.push(animation[i].current);\n    });\n    animation.current = toRGBA(res);\n  };\n\n  var colorOnFrame = function colorOnFrame(animation, timestamp) {\n    var HSVACurrent = convertToHSVA(animation.current);\n    var res = [];\n    var finished = true;\n    tab.forEach(function (i, index) {\n      animation[i].current = HSVACurrent[index];\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n    animation.current = toRGBA(res);\n    return finished;\n  };\n\n  animation.onStart = function (animation, value, timestamp, previousAnimation) {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    }\n\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\n\nexport function defineAnimation(starting, factory) {\n  'worklet';\n\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n\n  var create = function create() {\n    'worklet';\n\n    var animation = factory();\n    decorateAnimation(animation);\n    return animation;\n  };\n\n  if (_WORKLET || !NativeReanimatedModule.native) {\n    return create();\n  }\n\n  return create;\n}\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n\n  sharedValue.value = sharedValue.value;\n}\nexport function withStartValue(startValue, animation) {\n  'worklet';\n\n  return defineAnimation(startValue, function () {\n    'worklet';\n\n    if (!_WORKLET && typeof animation === 'function') {\n      animation = animation();\n    }\n\n    animation.current = startValue;\n    return animation;\n  });\n}","map":{"version":3,"sources":["C:/Users/Gigio/Desktop/SENAI/Eletronicos/tcc/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js"],"names":["convertToHSVA","isColor","toRGBA","NativeReanimatedModule","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","_a","match","Error","prefix","suffix","number","strippedValue","parseFloat","decorateAnimation","animation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","callback","prefNumberSuffOnStart","timestamp","previousAnimation","_b","_c","_d","__prefix","__suffix","strippedCurrent","toValue","strippedToValue","current","startValue","prefNumberSuffOnFrame","res","tab","colorOnStart","HSVAValue","HSVACurrent","HSVAToValue","forEach","i","index","undefined","push","colorOnFrame","finished","defineAnimation","starting","factory","create","_WORKLET","native","cancelAnimation","sharedValue","withStartValue"],"mappings":"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","sourcesContent":["/* global _WORKLET */\r\nimport { convertToHSVA, isColor, toRGBA } from '../Colors';\r\nimport NativeReanimatedModule from '../NativeReanimated';\r\nlet IN_STYLE_UPDATER = false;\r\nexport function initialUpdaterRun(updater) {\r\n    IN_STYLE_UPDATER = true;\r\n    const result = updater();\r\n    IN_STYLE_UPDATER = false;\r\n    return result;\r\n}\r\nfunction recognizePrefixSuffix(value) {\r\n    'worklet';\r\n    var _a;\r\n    if (typeof value === 'string') {\r\n        const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\r\n        if (!match) {\r\n            throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\r\n        }\r\n        const prefix = match[1];\r\n        const suffix = match[4];\r\n        // number with scientific notation\r\n        const number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\r\n        return { prefix, suffix, strippedValue: parseFloat(number) };\r\n    }\r\n    else {\r\n        return { strippedValue: value };\r\n    }\r\n}\r\nfunction decorateAnimation(animation) {\r\n    'worklet';\r\n    if (animation.isHigherOrder) {\r\n        return;\r\n    }\r\n    const baseOnStart = animation.onStart;\r\n    const baseOnFrame = animation.onFrame;\r\n    const animationCopy = Object.assign({}, animation);\r\n    delete animationCopy.callback;\r\n    const prefNumberSuffOnStart = (animation, value, timestamp, previousAnimation) => {\r\n        var _a, _b, _c, _d;\r\n        // recognize prefix, suffix, and updates stripped value on animation start\r\n        const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\r\n        animation.__prefix = prefix;\r\n        animation.__suffix = suffix;\r\n        animation.strippedCurrent = strippedValue;\r\n        const { strippedValue: strippedToValue } = recognizePrefixSuffix(animation.toValue);\r\n        animation.current = strippedValue;\r\n        animation.startValue = strippedValue;\r\n        animation.toValue = strippedToValue;\r\n        if (previousAnimation && previousAnimation !== animation) {\r\n            previousAnimation.current = previousAnimation.strippedCurrent;\r\n        }\r\n        baseOnStart(animation, strippedValue, timestamp, previousAnimation);\r\n        animation.current =\r\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\r\n                animation.current +\r\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\r\n        if (previousAnimation && previousAnimation !== animation) {\r\n            previousAnimation.current =\r\n                ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') +\r\n                    previousAnimation.current +\r\n                    ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\r\n        }\r\n    };\r\n    const prefNumberSuffOnFrame = (animation, timestamp) => {\r\n        var _a, _b;\r\n        animation.current = animation.strippedCurrent;\r\n        const res = baseOnFrame(animation, timestamp);\r\n        animation.strippedCurrent = animation.current;\r\n        animation.current =\r\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\r\n                animation.current +\r\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\r\n        return res;\r\n    };\r\n    const tab = ['H', 'S', 'V', 'A'];\r\n    const colorOnStart = (animation, value, timestamp, previousAnimation) => {\r\n        let HSVAValue;\r\n        let HSVACurrent;\r\n        let HSVAToValue;\r\n        const res = [];\r\n        if (isColor(value)) {\r\n            HSVACurrent = convertToHSVA(animation.current);\r\n            HSVAValue = convertToHSVA(value);\r\n            if (animation.toValue) {\r\n                HSVAToValue = convertToHSVA(animation.toValue);\r\n            }\r\n        }\r\n        tab.forEach((i, index) => {\r\n            animation[i] = Object.assign({}, animationCopy);\r\n            animation[i].current = HSVACurrent[index];\r\n            animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\r\n            animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\r\n            res.push(animation[i].current);\r\n        });\r\n        animation.current = toRGBA(res);\r\n    };\r\n    const colorOnFrame = (animation, timestamp) => {\r\n        const HSVACurrent = convertToHSVA(animation.current);\r\n        const res = [];\r\n        let finished = true;\r\n        tab.forEach((i, index) => {\r\n            animation[i].current = HSVACurrent[index];\r\n            // @ts-ignore: disable-next-line\r\n            finished &= animation[i].onFrame(animation[i], timestamp);\r\n            res.push(animation[i].current);\r\n        });\r\n        animation.current = toRGBA(res);\r\n        return finished;\r\n    };\r\n    animation.onStart = (animation, value, timestamp, previousAnimation) => {\r\n        if (isColor(value)) {\r\n            colorOnStart(animation, value, timestamp, previousAnimation);\r\n            animation.onFrame = colorOnFrame;\r\n            return;\r\n        }\r\n        else if (typeof value === 'string') {\r\n            prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\r\n            animation.onFrame = prefNumberSuffOnFrame;\r\n            return;\r\n        }\r\n        baseOnStart(animation, value, timestamp, previousAnimation);\r\n    };\r\n}\r\nexport function defineAnimation(starting, factory) {\r\n    'worklet';\r\n    if (IN_STYLE_UPDATER) {\r\n        return starting;\r\n    }\r\n    const create = () => {\r\n        'worklet';\r\n        const animation = factory();\r\n        decorateAnimation(animation);\r\n        return animation;\r\n    };\r\n    if (_WORKLET || !NativeReanimatedModule.native) {\r\n        return create();\r\n    }\r\n    // @ts-ignore: eslint-disable-line\r\n    return create;\r\n}\r\nexport function cancelAnimation(sharedValue) {\r\n    'worklet';\r\n    // setting the current value cancels the animation if one is currently running\r\n    sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\r\n}\r\n// TODO it should work only if there was no animation before.\r\nexport function withStartValue(startValue, animation) {\r\n    'worklet';\r\n    return defineAnimation(startValue, () => {\r\n        'worklet';\r\n        if (!_WORKLET && typeof animation === 'function') {\r\n            animation = animation();\r\n        }\r\n        animation.current = startValue;\r\n        return animation;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}