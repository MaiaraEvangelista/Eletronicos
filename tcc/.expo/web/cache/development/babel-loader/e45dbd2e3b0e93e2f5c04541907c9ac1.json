{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\52672266883\\\\Desktop\\\\Eletronicos\\\\tcc\\\\src\\\\pages\\\\cadastro_user\\\\cadastroUser.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Style } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport { max } from \"react-native-reanimated\";\n\nvar cadastroUser = function (_Component) {\n  _inherits(cadastroUser, _Component);\n\n  var _super = _createSuper(cadastroUser);\n\n  function cadastroUser(props) {\n    var _this;\n\n    _classCallCheck(this, cadastroUser);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      celular: '',\n      CEP: ''\n    };\n    return _this;\n  }\n\n  _createClass(cadastroUser, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.RetangleCtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.RetangleH1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }\n      }, \"- cadastro\")), React.createElement(View, {\n        style: styles.ctnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.h1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.h1Style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }\n      }, \"Cadastro\")), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Nome completo\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }), React.createElement(TextInputMask, {\n        type: 'cel-phone',\n        options: {\n          maskType: 'BRL',\n          withDDD: true,\n          dddMask: '(99) '\n        },\n        value: this.state.celular,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            celular: x\n          });\n        },\n        style: styles.TxtInput,\n        placeholder: \"Celular\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Senha\",\n        placeholderTextColor: \"black\",\n        keyboardType: \"email-address\",\n        keyboardType: \"visible-password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInputMask, {\n        type: 'custom',\n        options: {\n          mask: '99999-999'\n        },\n        value: this.state.CEP,\n        onChangeText: function onChangeText(x) {\n          _this2.setState({\n            CEP: x\n          });\n        },\n        style: styles.TxtInput,\n        placeholder: \"CEP\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Rua\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.inputStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Endere\\xE7o\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TxtInput,\n        placeholder: \"Complemento\",\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 20\n        }\n      })), React.createElement(View, {\n        style: styles.btnInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.btnCtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.txtBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, \"Cadastrar\")))));\n    }\n  }]);\n\n  return cadastroUser;\n}(Component);\n\nexport { cadastroUser as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  RetangleCtn: {\n    flex: 0.25,\n    backgroundColor: '#00873B',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingLeft: 20\n  },\n  RetangleH1: {\n    color: 'white',\n    fontSize: 20,\n    font: font\n  },\n  ctnInput: {\n    flex: 1,\n    justifyContent: 'space-around',\n    position: 'relative',\n    bottom: 10\n  },\n  h1: {\n    flex: 0.1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  h1Style: {\n    fontSize: 25,\n    fontFamily: 'Arial',\n    fontWeight: 'bold'\n  },\n  inputStyle: {\n    flex: 0.12,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  TxtInput: {\n    width: '40%',\n    height: '70%',\n    borderColor: '#00873B',\n    borderWidth: 4,\n    borderRadius: 10,\n    fontSize: 17,\n    paddingLeft: 7\n  },\n  btnInput: {\n    flex: 0.1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnCtn: {\n    width: '35%',\n    height: '80%',\n    backgroundColor: '#008763',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  txtBtn: {\n    color: 'white',\n    fontSize: 20,\n    fontFamily: 'Arial'\n  }\n});","map":{"version":3,"sources":["C:/Users/52672266883/Desktop/Eletronicos/tcc/src/pages/cadastro_user/cadastroUser.js"],"names":["React","Component","Style","ScrollView","TextInput","TextInputMask","max","cadastroUser","props","state","celular","CEP","styles","container","RetangleCtn","RetangleH1","ctnInput","h1","h1Style","inputStyle","TxtInput","maskType","withDDD","dddMask","x","setState","mask","btnInput","btnCtn","txtBtn","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","paddingLeft","color","fontSize","font","position","bottom","fontFamily","fontWeight","flexDirection","width","height","borderColor","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, Style, TouchableOpacity } from \"react-native\";\r\n\r\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\r\nimport { TextInputMask } from 'react-native-masked-text'\r\nimport { max } from \"react-native-reanimated\";\r\n\r\nexport default class cadastroUser extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            celular: '',\r\n            CEP: '',\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <View style={styles.container}>\r\n\r\n                <View style={styles.RetangleCtn}>\r\n                  <Text style={styles.RetangleH1}>- cadastro</Text>\r\n                </View>\r\n\r\n            <View style={styles.ctnInput}>\r\n                <View style={styles.h1}>\r\n                  <Text style={styles.h1Style}>Cadastro</Text>\r\n                </View>\r\n\r\n                <View style={styles.inputStyle}>\r\n                  <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Nome completo\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"default\"\r\n                  />\r\n\r\n                  <TextInputMask\r\n                  type={'cel-phone'}\r\n                  options={{\r\n                    maskType: 'BRL',\r\n                    withDDD: true,\r\n                    dddMask: '(99) '\r\n                  }}\r\n                  value={this.state.celular}\r\n                  onChangeText={ x => \r\n                  {\r\n                    this.setState({\r\n                      celular : x\r\n                    })\r\n                  }} \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Celular\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Email\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                  />\r\n\r\n                <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Senha\"\r\n                    placeholderTextColor=\"black\"\r\n                    keyboardType=\"email-address\"\r\n                    keyboardType=\"visible-password\"\r\n                    secureTextEntry={true}\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInputMask\r\n                type={'custom'}\r\n                options={{\r\n                  mask : '99999-999'\r\n                }} \r\n                value={this.state.CEP}\r\n                onChangeText={ x => {\r\n                  this.setState({\r\n                    CEP : x\r\n                  })\r\n                }}\r\n                    style={styles.TxtInput}\r\n                    placeholder=\"CEP\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n\r\n                  <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Rua\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                </View>\r\n\r\n\r\n                <View style={styles.inputStyle}>\r\n                <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Endereço\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                   <TextInput \r\n                    style={styles.TxtInput}\r\n                    placeholder=\"Complemento\"\r\n                    placeholderTextColor=\"black\"\r\n                  />\r\n                </View>\r\n\r\n                <View style={styles.btnInput}>\r\n                  <TouchableOpacity style={styles.btnCtn}>\r\n                    <Text style={styles.txtBtn}>Cadastrar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n  },\r\n\r\n  RetangleCtn: {\r\n    flex: 0.25,\r\n    backgroundColor: '#00873B',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n\r\n    paddingLeft: 20,\r\n  },\r\n\r\n  RetangleH1: {\r\n    color : 'white',\r\n    fontSize: 20,\r\n    font\r\n  },\r\n\r\n  ctnInput : {\r\n    flex: 1,\r\n    // backgroundColor: 'blue',\r\n\r\n    justifyContent: 'space-around',\r\n\r\n    position: 'relative',\r\n    bottom: 10,\r\n  },\r\n\r\n  h1: {\r\n    flex: 0.1,\r\n    // backgroundColor: 'green',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  h1Style: {\r\n    fontSize : 25,\r\n    fontFamily : 'Arial',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  inputStyle: {\r\n    flex: 0.12,\r\n    // backgroundColor: 'yellow',\r\n\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  \r\n  TxtInput: {\r\n    width: '40%',\r\n    height: '70%',\r\n\r\n    borderColor: '#00873B',\r\n    borderWidth: 4,\r\n    borderRadius: 10,\r\n\r\n    fontSize: 17,\r\n    paddingLeft: 7,\r\n  },\r\n\r\n  btnInput: {\r\n    flex: 0.1,\r\n    // backgroundColor: 'orange',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  btnCtn: {\r\n    width: '35%',\r\n    height: '80%',\r\n    backgroundColor: '#008763',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n    borderRadius: 10,\r\n  },\r\n\r\n  txtBtn: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    fontFamily : 'Arial',\r\n  },\r\n  \r\n})"]},"metadata":{},"sourceType":"module"}